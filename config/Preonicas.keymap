/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <200>;
    quick-tap-ms = <100>;
    bindings = <&kp>, <&kp>;

    flavor = "balanced";
};

/ {
    combos {
        compatible = "zmk,combos";

        Backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <31 32>;
        };

        Copiar {
            bindings = <&kp LC(C)>;
            key-positions = <14 15>;
        };

        Pegar {
            bindings = <&kp LC(V)>;
            key-positions = <26 27>;
        };

        Cortar {
            bindings = <&kp LC(X)>;
            key-positions = <14 15 16>;
        };

        pegarTex {
            bindings = <&kp LC(LS(V))>;
            key-positions = <26 27 28>;
        };

        Borrar-palabra {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <31 32 33>;
        };

        Page-Up {
            bindings = <&kp PAGE_UP>;
            key-positions = <20 21>;
            require-prior-idle-ms = <40>;
        };

        Page-Down {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <44 45>;
            require-prior-idle-ms = <40>;
        };

        Home- {
            bindings = <&kp HOME>;
            key-positions = <19 20 21>;
        };

        End- {
            bindings = <&kp END>;
            key-positions = <43 44 45>;
        };

        delete {
            bindings = <&kp DEL>;
            key-positions = <19 20>;
        };

        togle1 {
            bindings = <&tog 1>;
            key-positions = <13 14 15 16>;
        };
        
        togle5 {
            bindings = <&tog 5>;
            key-positions = <25 26 27 28>;
        };

        Desacer {
            bindings = <&kp LC(Z)>;
            key-positions = <37 38>;
        };

        tabulador {
            bindings = <&kp TAB>;
            key-positions = <27 28>;
        };

        space {
            bindings = <&kp SPACE>;
            key-positions = <39 40>;
        };

    };

    behaviors {
        Ene_ene: Ene_ene {
            compatible = "zmk,behavior-tap-dance";
            label = "ENE_ENE";
            #binding-cells = <0>;
            bindings = <&kp N>, <&kp RA(N)>;
        };

        Hm: Hm {
            compatible = "zmk,behavior-hold-tap";
            label = "HM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        Soft_off: Soft_off {
            compatible = "zmk,behavior-soft-off";
            label = "SOFT_OFF";
            #binding-cells = <0>;
            hold-time-ms = <500>;
        };
    };

    macros {
        Captura: M1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(S))>;
            label = "M1";
        };

        Clave: Clave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp UP_ARROW>,
                <&macro_wait_time 500>,
                <&kp DOWN>,
                <&macro_wait_time 40>,
                <&kp NUMBER_1 &kp N0 &kp NUMBER_7 &kp N9>,
                <&macro_wait_time 500>,
                <&kp ENTER>;

            label = "CLAVE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------
            // |  ESC  |  1   |  2   |  3   |  4   |  5   |   6   |  7    |  8   |  9   |   0   | BSPC  |
            // |  TAB  |  Q   |  W   |  E   |  R   |  T   |   Y   |  U    |  I   |  O   |   P   |  \    |
            // | SHIFT |  A   |  S   |  D   |  F   |  G   |   H   |  J    |  K   |  L   |   ;   |  '    |
            // | CTRL  |  Z   |  X   |  C   |  V   |  B   |   N   |  M    |  ,   |  .   |   /   | ENTER |
            // |ADJUST | LCTL | LALT | LGUI | LOWR | SPACE| SPACE |  RAIS | LEFT | DOWN | UARW  | RARW  |

            bindings = <
&kp ESCAPE    &kp N1       &kp N2      &kp N3            &kp N4          &kp N5            &kp N6            &kp N7          &kp N8            &kp N9          &kp N0               &kp DEL
&kp TAB       &kp Q        &kp W       &kp E             &kp R           &kp T             &kp Y             &kp U           &kp I             &kp O           &kp P                &kp BACKSPACE
&kp CAPSLOCK  &Hm LCTRL A  &Hm LALT S  &Hm LEFT_SHIFT D  &Hm LEFT_GUI F  &kp G             &kp H             &Hm LEFT_GUI J  &Hm LEFT_SHIFT K  &Hm LEFT_ALT L  &Hm LCTRL SEMICOLON  &kp SQT
&kp LSHFT     &kp Z        &kp X       &kp C             &kp V           &kp B             &Ene_ene          &kp M           &kp COMMA         &kp DOT         &kp FSLH             &mt RIGHT_ALT BACKSPACE
&kp LCTRL     &trans       &trans      &kp LGUI          &mo 1           &mt LSHIFT ENTER  &mt LSHIFT SPACE  &mo 2           &mo 4             &trans          &trans               &trans
            >;
        };

        raise_layer {
            // -------------------------------------------------------------------------------------------
            // |  ESC  |  F2  |  F3  |  F4  |  F5  |  F6  |   F7  |  F8   |  F9  | F10  |  F11  |  F12  |
            // |   ~   |  !   |  @   |  #   |  $   |  %   |   ^   |   &   |  *   |  (   |   )   |  DEL  |
            // |       |  F1  |  F2  |  F3  |  F4  |  F5  |   F6  |   _   |  +   |  {   |   }   |   |   |
            // |       |  F7  |  F8  |  F9  |  F10 |  F11 |   F12 | LS(#) |LS(|) |      |       |       |
            // |       |      |      |      |      |      |       |       | NEXT | Vol- | Vol+ | PLAY   |

            bindings = <
&trans  &trans            &trans                   &trans                  &trans             &trans         &trans     &trans     &trans     &trans     &trans      &trans
&trans  &kp LEFT_WIN      &kp PAGE_DOWN            &kp UP_ARROW            &kp PAGE_UP        &kp DEL        &kp PLUS   &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp ASTRK   &trans
&trans  &kp SPACE         &kp LEFT_ARROW           &kp DOWN_ARROW          &kp RIGHT          &kp BACKSPACE  &kp MINUS  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp SLASH   &kp COLON
&trans  &kp LS(LG(LEFT))  &kp LS(LG(RIGHT_ARROW))  &kp LC(LG(LEFT_ARROW))  &kp LC(LG(RIGHT))  &kp LG(LS(S))  &kp N0     &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT  &trans
&trans  &trans            &trans                   &trans                  &trans             &trans         &trans     &trans     &trans     &trans     &trans      &trans
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------
            // |  ESC  |  F2  |  F3  |  F4  |  F5  |  F6  |  F7   |  F8   |  F9  | F10  |  F11  |  F12  |
            // |   ~   |  1   |  2   |  3   |  4   |  5   |  6    |   7   |  8   |  9   |   0   |  DEL  |
            // |  DEL  |  F1  |  F2  |  F3  |  F4  |  F5  |  F6   |   -   |  =   |  [   |   ]   |   \   |
            // |       |  F7  |  F8  |  F9  |  F10 |  F11 |  F12  |   #   |  |   |      |       |       |
            // |       |      |      |      |      |      |       |       |       |      |      |       |

            bindings = <
&kp F12  &kp F1     &kp F2     &kp F3             &kp F4         &kp F5            &kp F6          &kp F7         &kp F8                &kp F9                 &kp F10        &kp F11
&trans   &kp EXCL   &kp AT     &kp HASH           &kp DOLLAR     &kp PERCENT       &kp PLUS        &kp AMPERSAND  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp BACKSLASH  &trans
&trans   &kp TILDE  &kp CARET  &kp APOS           &kp LESS_THAN  &kp GREATER_THAN  &kp MINUS       &kp EQUAL      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE       &kp SINGLE_QUOTE
&trans   &none      &none      &kp DOUBLE_QUOTES  &none          &Captura          &kp UNDERSCORE  &kp ASTERISK   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp SLASH      &trans
&trans   &trans     &trans     &trans             &trans         &trans            &trans          &trans         &trans                &trans                 &trans         &trans
            >;
        };

        layer_3 {
            // ----------------------------------------------------------------------------------------------
            // |tog(4) |  F2    |   F3   |   F4   |   F5   |   F6   |  F7  |  F8  |  F9  | F10 | F11 |      |
            // |out tog|BT_SEL 0|BT_SEL 1|BT_SEL 2|BT_SEL 3|BT_SEL 4|BT_PRV|BT_NXT|BT_CLR|     |     |      |
            // |       |        |        |        |        |        |      |      |      |     |     |      |
            // |       |        |        |        |        |        |      |      |      |     |     |      |
            // |       |        |        |        |        |        |      |      |      |     |     |      |

            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR  &bt BT_CLR_ALL  &trans  &trans  &trans  &trans
&trans  &Soft_off     &kp X         &trans        &trans        &trans        &trans      &trans          &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans        &trans      &trans          &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans        &trans      &trans          &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans        &trans      &trans          &trans  &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans              &trans             &trans         &trans           &trans  &trans           &trans             &trans            &trans  &trans
&trans  &trans  &kp LC(UP)          &kp LC(PAGE_UP)    &kp LC(HOME)   &kp LC(LS(TAB))  &Clave  &kp LC(PAGE_UP)  &kp LC(PAGE_DOWN)  &trans            &trans  &trans
&none   &none   &kp LC(DOWN_ARROW)  &kp LC(PAGE_DOWN)  &kp LC(END)    &kp LC(TAB)      &trans  &kp C_VOL_DN     &kp C_VOLUME_UP    &kp C_PLAY_PAUSE  &trans  &trans
&trans  &none   &none               &kp LC(LEFT)       &kp LC(RIGHT)  &none            &trans  &kp DEL          &kp C_MUTE         &trans            &trans  &trans
&trans  &trans  &trans              &trans             &trans         &trans           &trans  &trans           &trans             &trans            &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&kp GRAVE  &kp N1    &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp BSPC
&kp TAB    &kp Q     &kp W   &kp E   &kp R   &kp T   &kp Y   &kp U   &kp I      &kp O    &kp P     &kp LBKT
&kp CAPS   &kp A     &kp S   &kp D   &kp F   &kp G   &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT  &kp Z     &kp X   &kp C   &kp V   &kp B   &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
&kp LCTRL  &kp LALT  &trans  &trans  &trans  &space  &ENTER  &trans  &trans     &trans   &trans    &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        capa3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };

        capa5 {
            if-layers = <1 4>;
            then-layer = <5>;
        };
    };
};
