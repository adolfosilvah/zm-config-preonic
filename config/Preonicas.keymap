/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
&mt {
    tapping-term-ms = <200>;
    quick-tap-ms = <100>;
    bindings = <&kp>, <&kp>;

    flavor = "balanced";
};


/ {
    combos {
        compatible = "zmk,combos";

        Backspace {//Listo
            bindings = <&kp BACKSPACE>;
            key-positions = <31 32>;
        };

        Copiar {//Listo
            bindings = <&kp LC(C)>; 
            key-positions = <14 15>;
        };

        Pegar {//Listo
            bindings = <&kp LC(V)>;
            key-positions = <26 27>;
        };

        Cortar {//Listo
            bindings = <&kp LC(X)>;
            key-positions = <14 15 16>;
        };

        pegarTex {//Listo
            bindings = <&kp LC(LS(V))>;
            key-positions = <26 27 28>;
        };

        Borrar-palabra {//Listo
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <31 32 33>;
        };


        Page-Up {//Listo
            bindings = <&kp PAGE_UP>;
            key-positions = <20 21>;
            require-prior-idle-ms = <40>;
        };

        Page-Down {//Listo
            bindings = <&kp PAGE_DOWN>;
            key-positions = <44 45>;
            require-prior-idle-ms = <40>;
        };

        Home- {//Listo
            bindings = <&kp HOME>;
            key-positions = <19 20 21>;
        };

        End- {//Listo
            bindings = <&kp END>;
            key-positions = <43 44 45>;
        };

        delete {//Listo
            bindings = <&kp DEL>;
            key-positions = <19 20>;
        };
/*
        Soft-Off {
            bindings = <&soft_off>;
            key-positions = <0 29>;
        };

        btclear {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <1 4>;
            layers = <3>;
        };

        bt0 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <1 13>;
        };

        bt1 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <2 14>;
            layers = <3>;
        };

        bt2 {
            bindings = <&bt BT_SEL 2>;
            key-positions = <3 15>;
            layers = <3>;
        };
*/
        tabulador {//Listo
            bindings = <&kp TAB>;
            key-positions = <27 28>;
        };

        space {//Listo
            bindings = <&kp SPACE>;
            key-positions = <39 40>;
        };
    };

    behaviors {
        Ene_ene: Ene_ene {
            compatible = "zmk,behavior-tap-dance";
            label = "ENE_ENE";
            #binding-cells = <0>;
            bindings = <&kp N>, <&kp RA(N)>;
        };

        Hm: Hm {
            compatible = "zmk,behavior-hold-tap";
            label = "HM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    macros {
        Captura: M1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(S))>;
            label = "M1";
        };

        Clave: Clave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp UP_ARROW>,
                <&macro_wait_time 500>,
                <&kp DOWN>,
                <&macro_wait_time 40>,
                <&kp NUMBER_1 &kp N0 &kp NUMBER_7 &kp N9>,
                <&macro_wait_time 500>,
                <&kp ENTER>;

            label = "CLAVE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------
            // |  ESC  |  1   |  2   |  3   |  4   |  5   |   6   |  7    |  8   |  9   |   0   | BSPC  |
            // |  TAB  |  Q   |  W   |  E   |  R   |  T   |   Y   |  U    |  I   |  O   |   P   |  \    |
            // | SHIFT |  A   |  S   |  D   |  F   |  G   |   H   |  J    |  K   |  L   |   ;   |  '    |
            // | CTRL  |  Z   |  X   |  C   |  V   |  B   |   N   |  M    |  ,   |  .   |   /   | ENTER |
            // |ADJUST | LCTL | LALT | LGUI | LOWR | SPACE| SPACE |  RAIS | LEFT | DOWN | UARW  | RARW  |

            bindings = <
&kp ESC    &kp N1     &kp N2    &kp N3    &kp N4  &kp N5     &kp N6     &kp N7  &kp N8     &kp N9    &kp N0    &kp BACKSPACE
&kp TAB    &kp Q      &kp W     &kp E     &kp R   &kp T      &kp Y      &kp U   &kp I      &kp O     &kp P     &kp BSLH
&kp LSHFT  &Hm LCTRL A  &Hm LALT S  &Hm LEFT_SHIFT D  &Hm LEFT_GUI F   &kp G      &kp H      &Hm LEFT_GUI J  &Hm LEFT_SHIFT K  &Hm LEFT_ALT L  &Hm LCTRL SEMICOLON  &kp SQT
&kp LCTRL  &kp Z      &kp X     &kp C     &kp V   &kp B      &kp N      &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp RET
&mo 3      &kp LCTRL  &kp LALT  &kp LGUI  &mo 1   &kp ENTER  &kp SPACE  &mo 2   &kp LEFT   &kp DOWN  &kp UP    &kp RIGHT
            >;
        };

        lower_layer {
            // -------------------------------------------------------------------------------------------
            // |  ESC  |  F2  |  F3  |  F4  |  F5  |  F6  |   F7  |  F8   |  F9  | F10  |  F11  |  F12  |
            // |   ~   |  !   |  @   |  #   |  $   |  %   |   ^   |   &   |  *   |  (   |   )   |  DEL  |
            // |       |  F1  |  F2  |  F3  |  F4  |  F5  |   F6  |   _   |  +   |  {   |   }   |   |   |
            // |       |  F7  |  F8  |  F9  |  F10 |  F11 |   F12 | LS(#) |LS(|) |      |       |       |
            // |       |      |      |      |      |      |       |       | NEXT | Vol- | Vol+ | PLAY   |

            bindings = <
&kp ESC    &kp F2    &kp F3  &kp F4    &kp F5    &kp F6     &kp F7     &kp F8               &kp F9               &kp F10       &kp F11       &kp F12
&kp TILDE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS             &kp ASTRK            &kp LPAR      &kp RPAR      &kp DEL
&trans     &kp F1    &kp F2  &kp F3    &kp F4    &kp F5     &kp F6     &kp UNDER            &kp PLUS             &kp LBRC      &kp RBRC      &kp PIPE
&trans     &kp F7    &kp F8  &kp F9    &kp F10   &kp F11    &kp F12    &kp LS(NON_US_HASH)  &kp LS(NON_US_BSLH)  &trans        &trans        &trans
&trans     &trans    &trans  &trans    &trans    &trans     &trans     &mo 3                &kp C_NEXT           &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PLAY_PAUSE
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------
            // |  ESC  |  F2  |  F3  |  F4  |  F5  |  F6  |  F7   |  F8   |  F9  | F10  |  F11  |  F12  |
            // |   ~   |  1   |  2   |  3   |  4   |  5   |  6    |   7   |  8   |  9   |   0   |  DEL  |
            // |  DEL  |  F1  |  F2  |  F3  |  F4  |  F5  |  F6   |   -   |  =   |  [   |   ]   |   \   |
            // |       |  F7  |  F8  |  F9  |  F10 |  F11 |  F12  |   #   |  |   |      |       |       |
            // |       |      |      |      |      |      |       |       |       |      |      |       |

            bindings = <
&kp ESC    &kp F2  &kp F3  &kp F4  &kp F5   &kp F6   &kp F7   &kp F8           &kp F9           &kp F10   &kp F11   &kp F12
&kp TILDE  &kp N1  &kp N2  &kp N3  &kp N4   &kp N5   &kp N6   &kp N7           &kp N8           &kp N9    &kp N0    &kp DEL
&kp DEL    &kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6   &kp MINUS        &kp EQUAL        &kp LBKT  &kp RBKT  &kp BSLH
&trans     &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &kp NON_US_HASH  &kp NON_US_BSLH  &trans    &trans    &trans
&trans     &trans  &trans  &trans  &mo 3    &trans   &trans   &trans           &trans           &trans    &trans    &trans
            >;
        };

        adjust_layer {
            // ------------------------------------------------------------------------------------------
            // |tog(4)|  F2  |  F3  |  F4  |  F5  |  F6  |  F7  |  F8  |  F9  |  F10 |  F11 |    F12    |
            // |      |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |LALT(PRTSN)|
            // |      |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |   PRTSN   |
            // |      |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |LCTRL(DEL) |
            // |      |      |      |      |      |BOOTLD|BOOTLD|      |      |      |      |           |

            bindings = <
&tog 4  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6       &kp F7       &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &none   &none   &none   &none   &none        &none        &none   &none   &none    &none    &kp LA(PSCRN)
&trans  &none   &none   &none   &none   &none        &none        &none   &none   &none    &none    &kp PSCRN
&trans  &none   &none   &none   &none   &none        &none        &none   &none   &none    &none    &kp LC(DEL)
&trans  &trans  &trans  &trans  &trans  &bootloader  &bootloader  &trans  &trans  &trans   &trans   &trans
            >;
        };

        flock_layer {
            // ----------------------------------------------------------------------------------------------
            // |tog(4) |  F2    |   F3   |   F4   |   F5   |   F6   |  F7  |  F8  |  F9  | F10 | F11 |      |
            // |out tog|BT_SEL 0|BT_SEL 1|BT_SEL 2|BT_SEL 3|BT_SEL 4|BT_PRV|BT_NXT|BT_CLR|     |     |      |
            // |       |        |        |        |        |        |      |      |      |     |     |      |
            // |       |        |        |        |        |        |      |      |      |     |     |      |
            // |       |        |        |        |        |        |      |      |      |     |     |      |

            bindings = <
&tog 4        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6        &kp F7      &kp F8      &kp F9      &kp F10  &kp F11  &trans
&out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_PRV  &bt BT_NXT  &bt BT_CLR  &trans   &trans   &trans
&trans        &trans        &trans        &trans        &trans        &trans        &trans      &trans      &trans      &trans   &trans   &trans
&trans        &trans        &trans        &trans        &trans        &trans        &trans      &trans      &trans      &trans   &trans   &trans
&trans        &trans        &trans        &trans        &trans        &trans        &trans      &trans      &trans      &trans   &trans   &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
